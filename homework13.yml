---
- name: create aws security group, key-pair, save keys
  hosts: localhost

  tasks:
    - name: create security group
      ec2_group:
        name: homework13
        description: open 22, 80 ports
        vpc_id: vpc-06522b293159a2cd7
        region: us-east-1
        rules:
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow http for all
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
            rule_desc: only for tomcat pages
          - proto: tcp
            ports:
              - 22
            cidr_ip: 51.250.14.51/32
            rule_desc: allow ssh only for me

    - name: create key-pair
      ec2_key:
        name: homework13key
      register: key_result

    - name: save keys to this machine
      copy:
        content: "{{ key_result.key.private_key }}"
        dest: "/root/.ssh/id_rsa"
        mode: 0600
      when: key_result.changed

    - name: create aws "build" instance
      ec2_instance:
        key_name: homework13key
        name: "homework13-build"
        image_id: ami-09cd747c78a9add63
        instance_type: t2.micro
        security_group: homework13
        vpc_subnet_id: subnet-0414e6106afcc7dec
        network:
          assign_public_ip: true
      register: build

    - name: print debug "build" vm
      debug:
        var: build.instances[0].public_ip_address

    - name: add to build
      add_host:
        hostname: "{{ build.instances[0].public_ip_address }}"
        groups: build

    - name: create aws "prod" instance
      ec2_instance:
        key_name: homework13key
        name: "homework13-prod"
        image_id: ami-09cd747c78a9add63
        instance_type: t2.micro
        security_group: homework13
        vpc_subnet_id: subnet-0414e6106afcc7dec
        network:
          assign_public_ip: true
      register: prod

    - name: print debug "prod" vm
      debug:
        var: prod.instances[0].public_ip_address

    - name: add to prod
      add_host:
        hostname: "{{ prod.instances[0].public_ip_address }}"
        groups: prod

- name: install git & maven on building server
  hosts: build
  remote_user: ubuntu
  become: yes

  tasks:
  - name: Ensure git package is present
    apt:
      name: git
      state: present
      update_cache: yes

  - name: Ensure maven package is present
    apt:
      name: maven
      state: present

  - name: Ensure clone git repository boxfuse
    git:
      repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello
      dest: /boxfuse-sample-java-war-hello/
      clone: yes

  - name: Ensure to folder /boxfuse-sample-java-war-hello/ and build java project
    command: mvn --batch-mode --quiet install
    args:
      chdir: /boxfuse-sample-java-war-hello

  - name: Ensure copy from building server /target folder to master host
    synchronize:
      mode: pull
      src: /boxfuse-sample-java-war-hello/target/hello-1.0.war
      dest: /root/

- name: install default-jdk & tomcat9 on production server
  hosts: prod
  remote_user: ubuntu
  become: yes

  tasks:
  - name: Ensure default-jdk package is present
    apt:
      name: default-jdk
      state: present
      update_cache: yes

  - name: Ensure tomcat9 package is present
    apt:
      name: tomcat9
      state: present

  - name: Ensure copy from master to /root/ folder to production /var/lib/tomcat9/webapps/
    synchronize:
      src: /root/hello-1.0.war
      dest: /var/lib/tomcat9/webapps/